/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void onOff_clicked(GCheckbox source, GEvent event) { //_CODE_:GUIonOff:382847:
  if (event == GEvent.DESELECTED){
    envoiA.setOn(false);
    envoiB.setOn(false);
  }
  if (event == GEvent.SELECTED){
    envoiA.setOn(true);
    envoiB.setOn(true);
  }
} //_CODE_:GUIonOff:382847:

public void panA_change(GSlider source, GEvent event) { //_CODE_:GUIpanA:815799:
  envoiA.setPan(int(source.getValueS()));
} //_CODE_:GUIpanA:815799:

public void tiltA_change(GSlider source, GEvent event) { //_CODE_:GUItiltA:378363:
  envoiA.setTilt(int(source.getValueS()));
} //_CODE_:GUItiltA:378363:

public void panB_change(GSlider source, GEvent event) { //_CODE_:GUIpanB:430887:
  envoiB.setPan(int(source.getValueS()));
} //_CODE_:GUIpanB:430887:

public void tiltB_change(GSlider source, GEvent event) { //_CODE_:GUItiltB:239264:
  envoiB.setTilt(int(source.getValueS()));
} //_CODE_:GUItiltB:239264:

public void GUIvMotA_change(GSlider source, GEvent event) { //_CODE_:GUIvMotA:641648:
  envoiA.setVMot(int(source.getValueS()));
} //_CODE_:GUIvMotA:641648:

public void vMotB_change(GSlider source, GEvent event) { //_CODE_:GUIvMotB:609094:
  envoiB.setVMot(int(source.getValueS()));
} //_CODE_:GUIvMotB:609094:

public void LabelEnvoiA_change1(GTextField source, GEvent event) { //_CODE_:LabelEnvoiA:887510:
} //_CODE_:LabelEnvoiA:887510:

public void LabelEnvoiB_change(GTextField source, GEvent event) { //_CODE_:LabelEnvoiB:940453:
} //_CODE_:LabelEnvoiB:940453:

public void LabelRecuA_change(GTextField source, GEvent event) { //_CODE_:LabelRecuA:298797:
} //_CODE_:LabelRecuA:298797:

public void LabelRecuB_change(GTextField source, GEvent event) { //_CODE_:LabelRecuB:809813:
} //_CODE_:LabelRecuB:809813:

public void dropList1_click1(GDropList source, GEvent event) { //_CODE_:GUIScenario:653815:
  scenario.setId(source.getSelectedIndex());
} //_CODE_:GUIScenario:653815:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.CYAN_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("INFINI");
  GUIonOff = new GCheckbox(this, 20, 10, 90, 20);
  GUIonOff.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  GUIonOff.setText("ON / OFF");
  GUIonOff.setOpaque(false);
  GUIonOff.addEventHandler(this, "onOff_clicked");
  GUIpanA = new GSlider(this, 200, 50, 110, 40, 10.0);
  GUIpanA.setShowValue(true);
  GUIpanA.setLimits(100, 0, 255);
  GUIpanA.setNumberFormat(G4P.INTEGER, 0);
  GUIpanA.setOpaque(false);
  GUIpanA.addEventHandler(this, "panA_change");
  GUItiltA = new GSlider(this, 200, 90, 110, 40, 10.0);
  GUItiltA.setShowValue(true);
  GUItiltA.setLimits(100, 0, 255);
  GUItiltA.setNumberFormat(G4P.INTEGER, 0);
  GUItiltA.setOpaque(false);
  GUItiltA.addEventHandler(this, "tiltA_change");
  GUIpanB = new GSlider(this, 340, 50, 110, 40, 10.0);
  GUIpanB.setShowValue(true);
  GUIpanB.setLimits(100, 0, 255);
  GUIpanB.setNumberFormat(G4P.INTEGER, 0);
  GUIpanB.setOpaque(false);
  GUIpanB.addEventHandler(this, "panB_change");
  GUItiltB = new GSlider(this, 340, 90, 110, 40, 10.0);
  GUItiltB.setShowValue(true);
  GUItiltB.setTextOrientation(G4P.BLUE_SCHEME);
  GUItiltB.setLimits(100, 0, 255);
  GUItiltB.setNumberFormat(G4P.INTEGER, 0);
  GUItiltB.setOpaque(false);
  GUItiltB.addEventHandler(this, "tiltB_change");
  GUIvMotA = new GSlider(this, 200, 10, 110, 40, 10.0);
  GUIvMotA.setShowValue(true);
  GUIvMotA.setLimits(100, 0, 255);
  GUIvMotA.setNumberFormat(G4P.INTEGER, 0);
  GUIvMotA.setOpaque(false);
  GUIvMotA.addEventHandler(this, "GUIvMotA_change");
  GUIvMotB = new GSlider(this, 340, 10, 110, 40, 10.0);
  GUIvMotB.setShowValue(true);
  GUIvMotB.setLimits(100, 0, 255);
  GUIvMotB.setNumberFormat(G4P.INTEGER, 0);
  GUIvMotB.setOpaque(false);
  GUIvMotB.addEventHandler(this, "vMotB_change");
  GUIvBatA = new GLabel(this, 200, 130, 80, 20);
  GUIvBatA.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  GUIvBatA.setText("vBatA =");
  GUIvBatA.setOpaque(true);
  GUIvBatB = new GLabel(this, 340, 130, 80, 20);
  GUIvBatB.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  GUIvBatB.setText("vBatB = ");
  GUIvBatB.setOpaque(true);
  LabelvMotA = new GLabel(this, 150, 20, 50, 20);
  LabelvMotA.setText("vMotA");
  LabelvMotA.setOpaque(false);
  LabelpanA = new GLabel(this, 150, 60, 50, 20);
  LabelpanA.setText("panA");
  LabelpanA.setOpaque(false);
  LabeltiltA = new GLabel(this, 150, 100, 50, 20);
  LabeltiltA.setText("tiltA");
  LabeltiltA.setOpaque(false);
  LabelvMotB = new GLabel(this, 450, 20, 50, 20);
  LabelvMotB.setText("vMotB");
  LabelvMotB.setOpaque(false);
  LabelpanB = new GLabel(this, 450, 60, 50, 20);
  LabelpanB.setText("panB");
  LabelpanB.setOpaque(false);
  LabeltiltB = new GLabel(this, 450, 100, 50, 20);
  LabeltiltB.setText("tiltB");
  LabeltiltB.setOpaque(false);
  GUIConnected = new GLabel(this, 20, 40, 110, 20);
  GUIConnected.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  GUIConnected.setText("non connect√©");
  GUIConnected.setOpaque(false);
  LabelEnvoiA = new GTextField(this, 590, 20, 200, 20, G4P.SCROLLBARS_NONE);
  LabelEnvoiA.setOpaque(true);
  LabelEnvoiA.addEventHandler(this, "LabelEnvoiA_change1");
  LabelEnvoiB = new GTextField(this, 590, 50, 200, 20, G4P.SCROLLBARS_NONE);
  LabelEnvoiB.setOpaque(true);
  LabelEnvoiB.addEventHandler(this, "LabelEnvoiB_change");
  LabelRecuA = new GTextField(this, 590, 80, 200, 20, G4P.SCROLLBARS_NONE);
  LabelRecuA.setOpaque(true);
  LabelRecuA.addEventHandler(this, "LabelRecuA_change");
  LabelRecuB = new GTextField(this, 590, 110, 200, 20, G4P.SCROLLBARS_NONE);
  LabelRecuB.setOpaque(true);
  LabelRecuB.addEventHandler(this, "LabelRecuB_change");
  togGroup1 = new GToggleGroup();
  togGroup2 = new GToggleGroup();
  togGroup3 = new GToggleGroup();
  togGroup4 = new GToggleGroup();
  GUIScenario = new GDropList(this, 20, 70, 90, 80, 3);
  GUIScenario.setItems(loadStrings("list_653815"), 0);
  GUIScenario.addEventHandler(this, "dropList1_click1");
}

// Variable declarations 
// autogenerated do not edit
GCheckbox GUIonOff; 
GSlider GUIpanA; 
GSlider GUItiltA; 
GSlider GUIpanB; 
GSlider GUItiltB; 
GSlider GUIvMotA; 
GSlider GUIvMotB; 
GLabel GUIvBatA; 
GLabel GUIvBatB; 
GLabel LabelvMotA; 
GLabel LabelpanA; 
GLabel LabeltiltA; 
GLabel LabelvMotB; 
GLabel LabelpanB; 
GLabel LabeltiltB; 
GLabel GUIConnected; 
GTextField LabelEnvoiA; 
GTextField LabelEnvoiB; 
GTextField LabelRecuA; 
GTextField LabelRecuB; 
GToggleGroup togGroup1; 
GToggleGroup togGroup2; 
GToggleGroup togGroup3; 
GToggleGroup togGroup4; 
GDropList GUIScenario; 